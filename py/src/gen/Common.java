// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Common.proto

package gen;

public final class Common {
  private Common() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TestProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TestProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 test1 = 1;</code>
     *
     * <pre>
     * test1
     * </pre>
     */
    boolean hasTest1();
    /**
     * <code>optional int32 test1 = 1;</code>
     *
     * <pre>
     * test1
     * </pre>
     */
    int getTest1();

    /**
     * <code>optional int32 test2 = 2;</code>
     *
     * <pre>
     * test2
     * </pre>
     */
    boolean hasTest2();
    /**
     * <code>optional int32 test2 = 2;</code>
     *
     * <pre>
     * test2
     * </pre>
     */
    int getTest2();

    /**
     * <code>optional int32 test3 = 3;</code>
     *
     * <pre>
     * test3
     * </pre>
     */
    boolean hasTest3();
    /**
     * <code>optional int32 test3 = 3;</code>
     *
     * <pre>
     * test3
     * </pre>
     */
    int getTest3();

    /**
     * <code>optional int32 test4 = 4;</code>
     *
     * <pre>
     * test4
     * </pre>
     */
    boolean hasTest4();
    /**
     * <code>optional int32 test4 = 4;</code>
     *
     * <pre>
     * test4
     * </pre>
     */
    int getTest4();

    /**
     * <code>optional bool test5 = 5;</code>
     *
     * <pre>
     * test5
     * </pre>
     */
    boolean hasTest5();
    /**
     * <code>optional bool test5 = 5;</code>
     *
     * <pre>
     * test5
     * </pre>
     */
    boolean getTest5();
  }
  /**
   * Protobuf type {@code TestProto}
   *
   * <pre>
   * test
   * </pre>
   */
  public static final class TestProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:TestProto)
      TestProtoOrBuilder {
    // Use TestProto.newBuilder() to construct.
    private TestProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TestProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TestProto defaultInstance;
    public static TestProto getDefaultInstance() {
      return defaultInstance;
    }

    public TestProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TestProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              test1_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              test2_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              test3_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              test4_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              test5_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gen.Common.internal_static_TestProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gen.Common.internal_static_TestProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gen.Common.TestProto.class, gen.Common.TestProto.Builder.class);
    }

    public static com.google.protobuf.Parser<TestProto> PARSER =
        new com.google.protobuf.AbstractParser<TestProto>() {
      public TestProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TestProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TEST1_FIELD_NUMBER = 1;
    private int test1_;
    /**
     * <code>optional int32 test1 = 1;</code>
     *
     * <pre>
     * test1
     * </pre>
     */
    public boolean hasTest1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 test1 = 1;</code>
     *
     * <pre>
     * test1
     * </pre>
     */
    public int getTest1() {
      return test1_;
    }

    public static final int TEST2_FIELD_NUMBER = 2;
    private int test2_;
    /**
     * <code>optional int32 test2 = 2;</code>
     *
     * <pre>
     * test2
     * </pre>
     */
    public boolean hasTest2() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 test2 = 2;</code>
     *
     * <pre>
     * test2
     * </pre>
     */
    public int getTest2() {
      return test2_;
    }

    public static final int TEST3_FIELD_NUMBER = 3;
    private int test3_;
    /**
     * <code>optional int32 test3 = 3;</code>
     *
     * <pre>
     * test3
     * </pre>
     */
    public boolean hasTest3() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 test3 = 3;</code>
     *
     * <pre>
     * test3
     * </pre>
     */
    public int getTest3() {
      return test3_;
    }

    public static final int TEST4_FIELD_NUMBER = 4;
    private int test4_;
    /**
     * <code>optional int32 test4 = 4;</code>
     *
     * <pre>
     * test4
     * </pre>
     */
    public boolean hasTest4() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 test4 = 4;</code>
     *
     * <pre>
     * test4
     * </pre>
     */
    public int getTest4() {
      return test4_;
    }

    public static final int TEST5_FIELD_NUMBER = 5;
    private boolean test5_;
    /**
     * <code>optional bool test5 = 5;</code>
     *
     * <pre>
     * test5
     * </pre>
     */
    public boolean hasTest5() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool test5 = 5;</code>
     *
     * <pre>
     * test5
     * </pre>
     */
    public boolean getTest5() {
      return test5_;
    }

    private void initFields() {
      test1_ = 0;
      test2_ = 0;
      test3_ = 0;
      test4_ = 0;
      test5_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, test1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, test2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, test3_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, test4_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, test5_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, test1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, test2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, test3_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, test4_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, test5_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gen.Common.TestProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gen.Common.TestProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gen.Common.TestProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gen.Common.TestProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gen.Common.TestProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gen.Common.TestProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gen.Common.TestProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gen.Common.TestProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gen.Common.TestProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gen.Common.TestProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gen.Common.TestProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TestProto}
     *
     * <pre>
     * test
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TestProto)
        gen.Common.TestProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gen.Common.internal_static_TestProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gen.Common.internal_static_TestProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gen.Common.TestProto.class, gen.Common.TestProto.Builder.class);
      }

      // Construct using gen.Common.TestProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        test1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        test2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        test3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        test4_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        test5_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gen.Common.internal_static_TestProto_descriptor;
      }

      public gen.Common.TestProto getDefaultInstanceForType() {
        return gen.Common.TestProto.getDefaultInstance();
      }

      public gen.Common.TestProto build() {
        gen.Common.TestProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gen.Common.TestProto buildPartial() {
        gen.Common.TestProto result = new gen.Common.TestProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.test1_ = test1_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.test2_ = test2_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.test3_ = test3_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.test4_ = test4_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.test5_ = test5_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gen.Common.TestProto) {
          return mergeFrom((gen.Common.TestProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gen.Common.TestProto other) {
        if (other == gen.Common.TestProto.getDefaultInstance()) return this;
        if (other.hasTest1()) {
          setTest1(other.getTest1());
        }
        if (other.hasTest2()) {
          setTest2(other.getTest2());
        }
        if (other.hasTest3()) {
          setTest3(other.getTest3());
        }
        if (other.hasTest4()) {
          setTest4(other.getTest4());
        }
        if (other.hasTest5()) {
          setTest5(other.getTest5());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gen.Common.TestProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gen.Common.TestProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int test1_ ;
      /**
       * <code>optional int32 test1 = 1;</code>
       *
       * <pre>
       * test1
       * </pre>
       */
      public boolean hasTest1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 test1 = 1;</code>
       *
       * <pre>
       * test1
       * </pre>
       */
      public int getTest1() {
        return test1_;
      }
      /**
       * <code>optional int32 test1 = 1;</code>
       *
       * <pre>
       * test1
       * </pre>
       */
      public Builder setTest1(int value) {
        bitField0_ |= 0x00000001;
        test1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 test1 = 1;</code>
       *
       * <pre>
       * test1
       * </pre>
       */
      public Builder clearTest1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        test1_ = 0;
        onChanged();
        return this;
      }

      private int test2_ ;
      /**
       * <code>optional int32 test2 = 2;</code>
       *
       * <pre>
       * test2
       * </pre>
       */
      public boolean hasTest2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 test2 = 2;</code>
       *
       * <pre>
       * test2
       * </pre>
       */
      public int getTest2() {
        return test2_;
      }
      /**
       * <code>optional int32 test2 = 2;</code>
       *
       * <pre>
       * test2
       * </pre>
       */
      public Builder setTest2(int value) {
        bitField0_ |= 0x00000002;
        test2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 test2 = 2;</code>
       *
       * <pre>
       * test2
       * </pre>
       */
      public Builder clearTest2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        test2_ = 0;
        onChanged();
        return this;
      }

      private int test3_ ;
      /**
       * <code>optional int32 test3 = 3;</code>
       *
       * <pre>
       * test3
       * </pre>
       */
      public boolean hasTest3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 test3 = 3;</code>
       *
       * <pre>
       * test3
       * </pre>
       */
      public int getTest3() {
        return test3_;
      }
      /**
       * <code>optional int32 test3 = 3;</code>
       *
       * <pre>
       * test3
       * </pre>
       */
      public Builder setTest3(int value) {
        bitField0_ |= 0x00000004;
        test3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 test3 = 3;</code>
       *
       * <pre>
       * test3
       * </pre>
       */
      public Builder clearTest3() {
        bitField0_ = (bitField0_ & ~0x00000004);
        test3_ = 0;
        onChanged();
        return this;
      }

      private int test4_ ;
      /**
       * <code>optional int32 test4 = 4;</code>
       *
       * <pre>
       * test4
       * </pre>
       */
      public boolean hasTest4() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 test4 = 4;</code>
       *
       * <pre>
       * test4
       * </pre>
       */
      public int getTest4() {
        return test4_;
      }
      /**
       * <code>optional int32 test4 = 4;</code>
       *
       * <pre>
       * test4
       * </pre>
       */
      public Builder setTest4(int value) {
        bitField0_ |= 0x00000008;
        test4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 test4 = 4;</code>
       *
       * <pre>
       * test4
       * </pre>
       */
      public Builder clearTest4() {
        bitField0_ = (bitField0_ & ~0x00000008);
        test4_ = 0;
        onChanged();
        return this;
      }

      private boolean test5_ ;
      /**
       * <code>optional bool test5 = 5;</code>
       *
       * <pre>
       * test5
       * </pre>
       */
      public boolean hasTest5() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool test5 = 5;</code>
       *
       * <pre>
       * test5
       * </pre>
       */
      public boolean getTest5() {
        return test5_;
      }
      /**
       * <code>optional bool test5 = 5;</code>
       *
       * <pre>
       * test5
       * </pre>
       */
      public Builder setTest5(boolean value) {
        bitField0_ |= 0x00000010;
        test5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool test5 = 5;</code>
       *
       * <pre>
       * test5
       * </pre>
       */
      public Builder clearTest5() {
        bitField0_ = (bitField0_ & ~0x00000010);
        test5_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TestProto)
    }

    static {
      defaultInstance = new TestProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TestProto)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TestProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TestProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Common.proto\"V\n\tTestProto\022\r\n\005test1\030\001 \001" +
      "(\005\022\r\n\005test2\030\002 \001(\005\022\r\n\005test3\030\003 \001(\005\022\r\n\005test" +
      "4\030\004 \001(\005\022\r\n\005test5\030\005 \001(\010B\r\n\003genB\006Common"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_TestProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TestProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_TestProto_descriptor,
        new java.lang.String[] { "Test1", "Test2", "Test3", "Test4", "Test5", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
